" Enable modern Vim features not compatible with Vi spec.
set nocompatible

" Enable file type based indent configuration and syntax highlighting.
" Note that when code is pasted via the terminal, vim by default does not detect
" that the code is pasted (as opposed to when using vim's paste mappings), which
" leads to incorrect indentation when indent mode is on.
" To work around this, use ":set paste" / ":set nopaste" to toggle paste mode.
" You can also use a plugin to:
" - enter insert mode with paste (https://github.com/tpope/vim-unimpaired)
" - auto-detect pasting (https://github.com/ConradIrwin/vim-bracketed-paste)
filetype plugin indent on
syntax on

set cmdheight=2
set completeopt-=preview
set completeopt+=menuone
set number
set relativenumber

>>>>>>> af45452... vim add rust, languageclient, mucomplete
call plug#begin('~/.vim/plugged')
Plug 'jlanzarotta/bufexplorer'
Plug 'kien/ctrlp.vim'
Plug 'rust-lang/rust.vim'
Plug 'autozimu/LanguageClient-neovim', {
    \ 'branch': 'next',
    \ 'do': 'bash install.sh',
    \ }
Plug 'lifepillar/vim-mucomplete'
call plug#end()

" bufexplorer options
" show relative paths by default
let g:bufExplorerShowRelativePath = 1

" ctrlp options
" activate the Ctrl+P map
let g:ctrlp_map = '<c-p>'
" larger max files
let g:ctrlp_max_files = 100000

" Language Client config
let g:LanguageClient_serverCommands = {
  \ 'rust': ['~/.cargo/bin/rustup', 'run', 'stable', 'rls'],
  \ }
nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
