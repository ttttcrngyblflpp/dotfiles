define-command edit-rc "e %val{config}/kakrc"
alias global erc edit-rc

addhl global/ number-lines -relative

set-option global grepcmd 'rg -n --column'

hook global BufOpenFile .* editorconfig-load
hook global BufNewFile .* editorconfig-load

hook global WinSetOption filetype=markdown %{
    set window autowrap_column 80
    autowrap-enable
}
map global normal = '|fmt -w $kak_opt_autowrap_column<ret>'

hook global WinSetOption filetype=rust %{
    set-face window module default
    set-face window function default+fg
    set-face window variable default
}

evaluate-commands %sh{
    plugins="$kak_config/plugins"
    mkdir -p "$plugins"
    [ ! -e "$plugins/plug.kak" ] && \
        git clone -q https://github.com/andreyorst/plug.kak.git "$plugins/plug.kak"
    printf "%s\n" "source '$plugins/plug.kak/rc/plug.kak'"
}
plug "andreyorst/plug.kak" noload

plug "andreyorst/smarttab.kak" defer smarttab %{
    set-option global softtabstop 4
} config %{
    hook global WinSetOption filetype=.* expandtab
    hook global WinSetOption filetype=go smarttab
}

plug "andreyorst/fzf.kak" config %{
    map global normal <c-p> %{: fzf-mode<ret>}
    map global normal <c-q> %{: fzf -fzf-impl %{FZF_DEFAULT_COMMAND='rg --files -uu' fzf}<ret>}
} defer fzf-file %{
    set-option global fzf_file_command 'rg'
}

plug "kak-lsp/kak-lsp" do %{
    cargo install --locked --force --path .
}
lsp-enable

map global normal <space> ,
map global normal , <space>
map global user <semicolon> '<a-;>'

define-command -hidden ctrl-u 'exec -draft hGi<a-c>'
define-command -hidden ctrl-k 'exec -draft <a-l><a-c>'
define-command -hidden ctrl-w 'exec -draft b<a-c>'
map global insert <c-u> '<a-;>: ctrl-u<ret>'
map global insert <c-k> '<a-;>: ctrl-k<ret>'
map global insert <c-w> '<a-;>: ctrl-w<ret>'
map global insert <c-b> '<a-;>h'
map global insert <c-f> '<a-;>l'
map global insert <c-a> '<a-;>gi'
map global insert <c-e> '<a-;>gl<a-;>l'
map global insert <a-b> '<a-;>b'
map global insert <a-f> '<a-;>w<a-;>l'

define-command -params 1 -client-completion show-on %{
    evaluate-commands -client %arg{1} e %val{buffile} %val{cursor_line} %val{cursor_column}
}
alias global s show-on

map global user a '<a-a>'
map global user b '<a-b>'
map global user c '<a-c>'
map global user d '<a-d>'
map global user e '<a-e>'
map global user f '<a-f>'
map global user g '<a-g>'
map global user h '<a-h>'
map global user i '<a-i>'
map global user j '<a-j>'
map global user k '<a-k>'
map global user l '<a-l>'
map global user m '<a-m>'
map global user n '<a-n>'
map global user o '<a-o>'
map global user p '<a-p>'
map global user q '<a-q>'
map global user r '<a-r>'
map global user s '<a-s>'
map global user t '<a-t>'
map global user u '<a-u>'
map global user v '<a-v>'
map global user w '<a-w>'
map global user x '<a-x>'
map global user y '<a-y>'
map global user z '<a-z>'
map global user A '<a-A>'
map global user B '<a-B>'
map global user C '<a-C>'
map global user D '<a-D>'
map global user E '<a-E>'
map global user F '<a-F>'
map global user G '<a-G>'
map global user H '<a-H>'
map global user I '<a-I>'
map global user J '<a-J>'
map global user K '<a-K>'
map global user L '<a-L>'
map global user M '<a-M>'
map global user N '<a-N>'
map global user O '<a-O>'
map global user P '<a-P>'
map global user Q '<a-Q>'
map global user R '<a-R>'
map global user S '<a-S>'
map global user T '<a-T>'
map global user U '<a-U>'
map global user V '<a-V>'
map global user W '<a-W>'
map global user X '<a-X>'
map global user Y '<a-Y>'
map global user Z '<a-Z>'

map global user ! '<a-!>'
map global user $ '<a-$>'
map global user | '<a-|>'
map global user & '<a-&>'
map global user @ '<a-@>'
map global user * '<a-*>'
map global user / '<a-/>'
map global user ? '<a-?>'
map global user [ '<a-[>'
map global user ] '<a-]>'
map global user ( '<a-(>'
map global user ) '<a-)>'
map global user { '<a-{>'
map global user } '<a-}>'
map global user ` '<a-`>'
map global user ~ '<a-~>'
map global user , '<a-,>'
map global user . '<a-.>'
map global user : '<a-:>'
map global user ^ '<a-^>'
map global user _ '<a-_>'
map global user = '<a-=>'
map global user + '<a-+>'
